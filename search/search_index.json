{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Getting Started","text":"<p>Hologit lets you declaratively define virtual sub-branches within any Git branch</p> <ul> <li>Quick Start</li> <li>Grand Tour<ul> <li>Installation</li> <li>Repository Setup</li> <li>Holosources</li> <li>Holobranches</li> <li>Hololenses</li> <li>Holoreactors</li> </ul> </li> <li>Workflows<ul> <li>Work on Sources</li> <li>Publish a <code>docs/</code> tree to Gitbook and <code>gh-pages</code></li> <li>Publish a Static Website</li> <li>Operationalize a Data Set</li> <li>Developing an Emergence Site</li> </ul> </li> <li>Reference<ul> <li>Architecture</li> <li>Commands</li> <li>Filesystem</li> </ul> </li> </ul>"},{"location":"grand-tour/","title":"Introduction","text":"<p>This section offers a deep-dive into how each component works.</p>"},{"location":"grand-tour/holobranches/","title":"Holobranches","text":"<p>Holobranches are named virtual sub-branches versioned within any Git branch. Given the name of a holobranch and a commit for a branch it\u2019s defined in, Hologit can compute the holobranch\u2019s content and outputs a Git tree.</p>"},{"location":"grand-tour/hololenses/","title":"Hololenses","text":"<p>Hololenses are executable tools bound to transform some portion of a holobranch during its projectios.</p>"},{"location":"grand-tour/holoreactors/","title":"Holoreactors","text":"<p>Holoreactors are running services spawned from the content within a holobranch and automatically bound to its changes.</p>"},{"location":"grand-tour/holosources/","title":"Holosources","text":"<p>Holosources are named remote Git branches that content can be pulled from during projection. They can refer to any ref or hash in a remote repository, and optionally a holobranch within that.</p>"},{"location":"grand-tour/holosources/#overriding-via-environment","title":"Overriding via environment","text":"<p>Holosources can be overridden via <code>HOLO_SOURCE_*</code> environment variables.</p>"},{"location":"grand-tour/holosources/#variable-names","title":"Variable names","text":"<p>For example, a source named <code>parent-blueprint</code> could be overridden via <code>HOLO_SOURCE_PARENT_BLUEPRINT</code>. The transformation from source name to environment variable name is applied as follows:</p> <ul> <li>Hyphens (<code>-</code>) replaced with underscores (<code>_</code>)</li> <li>All letters capitalized</li> </ul>"},{"location":"grand-tour/holosources/#change-url","title":"Change URL","text":"<p>You can change just the URL, preserving declared ref+holobranch:</p> <pre><code>HOLO_SOURCE_PARENT_BLUEPRINT=\"https://github.com/myorg/myfork\"\n</code></pre> <p>Local paths work too:</p> <pre><code>HOLO_SOURCE_PARENT_BLUEPRINT=\"file:///src/myfork\"\n</code></pre>"},{"location":"grand-tour/holosources/#change-ref","title":"Change ref","text":"<p>You can change just the ref, preserving declared url+holobranch:</p> <pre><code>HOLO_SOURCE_PARENT_BLUEPRINT=\"#refs/heads/develop\"\n</code></pre>"},{"location":"grand-tour/holosources/#change-holobranch","title":"Change holobranch","text":"<p>You can change just the holobranch, preserving declared url+ref:</p> <pre><code>HOLO_SOURCE_PARENT_BLUEPRINT=\"=&gt;helm-chart\"\n</code></pre>"},{"location":"grand-tour/holosources/#change-everything","title":"Change everything","text":"<p>You can reconfigure an entire source:</p> <pre><code>HOLO_SOURCE_PARENT_BLUEPRINT=\"file:///src/myfork#refs/heads/develop=&gt;helm-chart\"\n</code></pre> <p>Or clear out a declared holobranch component to use a native ref directly:</p> <pre><code>HOLO_SOURCE_PARENT_BLUEPRINT=\"file:///src/myfork#refs/heads/develop=&gt;\"\n</code></pre>"},{"location":"grand-tour/installation/","title":"Grand Tour: Installation","text":"<p>Hologit can be installed via habitat (best option in Linux environments):</p> <pre><code>$ hab pkg install -b jarvus/hologit\n\u00bb Installing jarvus/hologit\n\u2601 Determining latest version of jarvus/hologit in the 'stable' channel\n\u2192 Using jarvus/hologit/0.4.1/20181224022822\n\u2605 Install of jarvus/hologit/0.4.1/20181224022822 complete with 0 new packages installed.\n\u00bb Binlinking git-holo from jarvus/hologit/0.4.1/20181224022822 into /bin\n\u2605 Binlinked git-holo from jarvus/hologit/0.4.1/20181224022822 to /bin/git-holo\n</code></pre> <p>or with npm (best option in Mac environments):</p> <pre><code>$ git --version # ensure &gt;= 2.8.0\ngit version 2.17.2 (Apple Git-113)\n$ node --version # ensure &gt;= 8.3.0\nv11.5.0\n$ npm install -g hologit\n/usr/local/bin/git-holo -&gt; /usr/local/lib/node_modules/hologit/bin/cli.js\n+ hologit@0.4.1\nupdated 1 package in 1.947s\n</code></pre>"},{"location":"grand-tour/installation/#optional-watchman-for-working-trees","title":"Optional: watchman for working trees","text":"<p>Install <code>watchman</code> to enable watching working trees via habitat (best option in Linux environments):</p> <pre><code>$ hab pkg install -b jarvus/watchman\n\u00bb Installing jarvus/watchman\n\u2601 Determining latest version of jarvus/watchman in the 'stable' channel\n\u2192 Using jarvus/watchman/4.9.0/20180624025538\n\u2605 Install of jarvus/watchman/4.9.0/20180624025538 complete with 0 new packages installed.\n\u00bb Binlinking watchman from jarvus/watchman/4.9.0/20180624025538 into /bin\n\u2605 Binlinked watchman from jarvus/watchman/4.9.0/20180624025538 to /bin/watchman\n\u00bb Binlinking watchman-make from jarvus/watchman/4.9.0/20180624025538 into /bin\n\u2605 Binlinked watchman-make from jarvus/watchman/4.9.0/20180624025538 to /bin/watchman-make\n\u00bb Binlinking watchman-wait from jarvus/watchman/4.9.0/20180624025538 into /bin\n\u2605 Binlinked watchman-wait from jarvus/watchman/4.9.0/20180624025538 to /bin/watchman-wait\n$ mkdir -m 777 -p /hab/svc/watchman/var\n</code></pre> <p>or with homebrew (best option in Mac environments):</p> <pre><code>$ brew install watchman\n==&gt; Downloading https://homebrew.bintray.com/bottles/watchman-4.9.0_2.mojave.bottle.tar.gz\nAlready downloaded: /Users/chris/Library/Caches/Homebrew/downloads/01bca112fb1c6fe86d4068af4635ca8a47a53688bb3597c4ac5e45e49fe1de27--watchman-4.9.0_2.mojave.bottle.tar.gz\n==&gt; Pouring watchman-4.9.0_2.mojave.bottle.tar.gz\n==&gt; launchctl unload -F /Users/chris/Library/LaunchAgents/com.github.facebook.watchman.plist\n\ud83c\udf7a  /usr/local/Cellar/watchman/4.9.0_2: 23 files, 2.1MB\n</code></pre>"},{"location":"grand-tour/repository-setup/","title":"Repository setup","text":"<p>To enable using hologit on a repository, create <code>.holo/config.toml</code> and configure <code>holospace.name</code> within it.</p> <p>You can create the file yourself, or use the provided command:</p> <pre><code>git holo init\n</code></pre> <p>The name declared here is the holosource name used to refer to the host repository.</p>"},{"location":"workflows/","title":"Introduction","text":"<p>This section offers end-to-end examples of workflows you can implement.</p>"},{"location":"workflows/work-on-sources/","title":"Work on Sources","text":"<p>There are currently two supported methods for working on sources concurrently with working on your project:</p> <ul> <li>Environmental source overrides</li> <li>Source submodule checkouts</li> </ul> <p>Of the two, environmental source overrides are the more mature feature and recommended for now.</p>"},{"location":"workflows/work-on-sources/#method-1-environmental-source-overrides-recommended","title":"Method 1: Environmental Source Overrides (Recommended)","text":"<p>Environment variables based on the names of sources can be set to override their URL, ref, and optionally holobranch:</p> <pre><code>export HOLO_SOURCE_&lt;SOURCE_NAME&gt;=\"[url][#ref][=&gt;holobranch]\"\n</code></pre> <ul> <li>Source names must be uppercased and all <code>-</code> (hyphen) characters changed to <code>_</code> (underscore).</li> <li>Existing values can be used by omitting values to the left, but ommitted values to the right will be cleared.</li> <li>The <code>--working</code> option currently has no effect on overridden sources: working tree changes for sources will be ignored. You\u2019ll need to commit any changes to use them in downstream builds, but you don\u2019t need to push those commits and you can rewrite/amend them continuously.</li> </ul> <p>For example, give a source name of <code>skeleton-v1</code>:</p> <pre><code>export HOLO_SOURCE_SKELETON_V1=\"=&gt;emergence-vfs-site\" # use existing url+ref, override holobranch\nexport HOLO_SOURCE_SKELETON_V1=\"=&gt;\" # use existing url+ref, clear holobranch\nexport HOLO_SOURCE_SKELETON_V1=\"#refs/heads/develop\" # use existing url, change ref, clear holobranch\nexport HOLO_SOURCE_SKELETON_V1=\"#refs/heads/develop=&gt;emergence-skeleton\" # use existing url, change ref, keep holobranch\nexport HOLO_SOURCE_SKELETON_V1=\"file:///src/skeleton-v1\" # change url, clear ref+holobranch\nexport HOLO_SOURCE_SKELETON_V1=\"file:///src/skeleton-v1#refs/heads/develop=&gt;emergence-skeleton\" # change url+ref, keep holobranch\n</code></pre> <p>Environmental source overrides will be honored at every depth when using subprojections as sources, so while working on a project using <code>skeleton-v2</code> as a source, you could work on <code>skeleton-v2</code> and its source <code>skeleton-v1</code> simultaneously:</p> <pre><code>export HOLO_SOURCE_SKELETON_V2=\"file:///src/skeleton-v2#refs/heads/develop=&gt;emergence-skeleton\"\nexport HOLO_SOURCE_SKELETON_V1=\"file:///src/skeleton-v1#refs/heads/develop=&gt;emergence-skeleton\"\n</code></pre> <p>While working like this, you likely also want to environmentally instruct all hologit commands to always fetch the latest for these sources. This won\u2019t add an appreciable delay for local sources, but could slow down working against remote sources that aren\u2019t changing anyway:</p> <pre><code>export HOLO_FETCH=\"skeleton-v1:skeleton-v2\"\n</code></pre>"},{"location":"workflows/work-on-sources/#method-2-source-submodule-checkouts-work-in-progress","title":"Method 2: Source Submodule Checkouts (Work in Progress)","text":"<p>Check out a named source as a submodule:</p> <pre><code>git holo source checkout skeleton-v1\n</code></pre>"}]}